<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserDao">
  <resultMap id="BaseResultMap" type="com.model.User">
    <id column="ID" jdbcType="CHAR" property="id" />
    <result column="ROLE_ID" jdbcType="CHAR" property="roleId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="ENABLE" jdbcType="BIT" property="enable" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="REGISTER_TIME" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="CONTACT" jdbcType="VARCHAR" property="contact" />
    <result column="ORGANIZATION_ID" jdbcType="CHAR" property="organizationId" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ROLE_ID, USERNAME, `PASSWORD`, `ENABLE`, `NAME`, EMAIL, REGISTER_TIME, CONTACT, 
    ORGANIZATION_ID, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.User">
    insert into user (ID, ROLE_ID, USERNAME, 
      `PASSWORD`, `ENABLE`, `NAME`, 
      EMAIL, REGISTER_TIME, CONTACT, 
      ORGANIZATION_ID, VERSION)
    values (#{id,jdbcType=CHAR}, #{roleId,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{contact,jdbcType=VARCHAR}, 
      #{organizationId,jdbcType=CHAR}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        `PASSWORD`,
      </if>
      <if test="enable != null">
        `ENABLE`,
      </if>
      <if test="name != null">
        `NAME`,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="registerTime != null">
        REGISTER_TIME,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=CHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `PASSWORD` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        `ENABLE` = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        `NAME` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contact != null">
        CONTACT = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationId != null">
        ORGANIZATION_ID = #{record.organizationId,jdbcType=CHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set ID = #{record.id,jdbcType=CHAR},
      ROLE_ID = #{record.roleId,jdbcType=CHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      `PASSWORD` = #{record.password,jdbcType=VARCHAR},
      `ENABLE` = #{record.enable,jdbcType=BIT},
      `NAME` = #{record.name,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      CONTACT = #{record.contact,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=CHAR},
      VERSION = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.User">
    update user
    <set>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=CHAR},
      </if>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `PASSWORD` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        `ENABLE` = #{enable,jdbcType=BIT},
      </if>
      <if test="name != null">
        `NAME` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contact != null">
        CONTACT = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        ORGANIZATION_ID = #{organizationId,jdbcType=CHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.User">
    update user
    set ROLE_ID = #{roleId,jdbcType=CHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      `PASSWORD` = #{password,jdbcType=VARCHAR},
      `ENABLE` = #{enable,jdbcType=BIT},
      `NAME` = #{name,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      CONTACT = #{contact,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{organizationId,jdbcType=CHAR},
      VERSION = #{version,jdbcType=INTEGER}
    where ID = #{id,jdbcType=CHAR}
  </update>
</mapper>